<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hrproject.hrproject.dao.HrmDao">

    <select id="getHrmByLoginEmpno" parameterType="int" resultType="HrmDto">
        SELECT * FROM hrm
        WHERE empno = #{empNo}
    </select>

    <sql id="search">
        <choose>
            <when test="search == 'empno'">
                empno LIKE CONCAT('%', #{searchWord}, '%')
            </when>
            <when test="search == 'ename'">
                ename LIKE CONCAT('%', #{searchWord}, '%')
            </when>
            <when test="search == 'deptname'">
                deptname LIKE CONCAT('%', #{searchWord}, '%')
            </when>
            <when test="search == 'email'">
                email LIKE CONCAT('%', #{searchWord}, '%')
            </when>
            <otherwise>
                empno LIKE CONCAT('%', #{searchWord}, '%') OR
                ename LIKE CONCAT('%', #{searchWord}, '%') OR
                deptname LIKE CONCAT('%', #{searchWord}, '%') OR
                email LIKE CONCAT('%', #{searchWord}, '%')
            </otherwise>
        </choose>
    </sql>
    <sql id="duplicate">
        <choose>
            <when test="check == 'email'">
                email = #{checkValue}
            </when>
            <when test="check == 'mobile'">
                mobile = #{checkValue}
            </when>
            <when test="check == 'passport'">
                passport = #{checkValue}
            </when>
            <when test="check == 'account'">
                account = #{checkValue}
            </when>
        </choose>
    </sql>
    <sql id="evaluation">
        TIMESTAMPDIFF(YEAR, hrm.HIREDATE, CURDATE()) AS yosYear,
        TIMESTAMPDIFF(MONTH, hrm.HIREDATE, CURDATE()) - TIMESTAMPDIFF(YEAR, hrm.HIREDATE, CURDATE()) * 12 AS yosMonth,
        (
        (SELECT COUNT(ws.STATUS)
        FROM WORK_SCHEDULE ws
        WHERE ws.EMPNO = hrm.EMPNO AND ws.STATUS = '퇴근') /
        (
        (DATEDIFF(CURDATE(), hrm.HIREDATE) + 1) -  -- 총 일수에 1을 더해서 오늘날짜도 포함시킴
        (DATEDIFF(CURDATE(), hrm.HIREDATE) DIV 7 * 2) -  -- 주말 수를 고려해서 두 번 제거
        (CASE WHEN WEEKDAY(hrm.HIREDATE) = 6 THEN 1 ELSE 0 END) -  -- 입사일이 일요일인 경우 하루를 빼줌
        (CASE WHEN WEEKDAY(CURDATE()) = 5 THEN 1 ELSE 0 END)  -- 오늘이 토요일인 경우 하루를 더해줌
        ) * 100  -- 퍼센트 비율로 계산
        ) AS attendanceRate
    </sql>

    <select id="getHrmTotal" resultType="int">
        SELECT COUNT(*) AS TOTAL FROM HRM WHERE showAble = 1
    </select>

    <select id="getSearchHrmTotal" resultType="int" parameterType="HashMap">
        select count(*) as total from HRM WHERE showAble = 1
        <if test="search != null and searchWord != null">
            and
            <include refid="search"></include>
        </if>
    </select>

    <select id="duplicateCheck" resultType="int" parameterType="HashMap">
        select count(*) as total from HRM WHERE
        <if test="check != null and checkValue != null">
            <include refid="duplicate"></include>
        </if>
    </select>

    <select id="getHrm" resultType="HrmDto">
        SELECT * FROM HRM WHERE EMPNO = #{empNo} AND showAble = 1
    </select>

    <select id="getMaxEmpNo" resultType="int">
        SELECT IFNULL(MAX(empno), 0) FROM HRM
    </select>

    <select id="getHrmList" resultType="HrmDto" parameterType="HrmPageDto">
        SELECT * FROM (
        SELECT *, ROW_NUMBER() OVER () AS num FROM HRM WHERE showAble = 1
        ) AS numbered_rows
        LIMIT #{start}, #{end}
    </select>

    <!--    출퇴근 기록에 필요해서 만들었습니다.!! -->
    <select id="getEmpNoList" resultType="HrmDto" >
        select empNo from hrm
    </select>

    <select id="getSearchHrmList" resultType="HrmDto" parameterType="HrmPageDto">
        SELECT * FROM (
        SELECT *, ROW_NUMBER() OVER () AS num FROM HRM WHERE showAble = 1
        ) AS numbered_rows where
        <if test="search != null and searchWord != null">
            <include refid="search"></include>
        </if>
        LIMIT #{start}, #{end}
    </select>

    <insert id="insertHrm" parameterType="HrmDto">
        INSERT INTO HRM (
        EMPNO, ENAME, FOREIGN_NAME, BIRTHDATE, PASSWORD, DEPTNO, DEPTNAME, POSNO, POSNAME, ROLENAME, MOBILE, PASSPORT, EMAIL,
        BANK_NAME, ACCOUNT, ACCOUNT_HOLDER, POSTCODE, ADDRESS, ADDRESS_DETAIL, HIREDATE, HIRETYPE, RESIGNDATE,
        OUTREASONS, ORIGINAL_PROFILE, RENAME_PROFILE, REMARKS, GRADE, SHOWABLE
        ) VALUES (
        #{empNo}, #{ename}, #{foreignName}, #{birthDate}, #{password}, #{deptNo}, #{deptName}, #{posNo}, #{posName},
        #{roleName}, #{mobile}, #{passport}, #{email}, #{bankName}, #{account}, #{accountHolder}, #{postCode},
        #{address}, #{addressDetail}, #{hireDate}, #{hireType}, #{resignDate}, #{outReasons}, #{originalProfile},
        #{renameProfile}, #{remarks}, #{grade}, true
        )
    </insert>


    <update id="updateHrm" parameterType="HrmDto">
        UPDATE HRM
        SET
        ENAME = #{ename},
        FOREIGN_NAME = #{foreignName},
        BIRTHDATE = #{birthDate},
        DEPTNO = #{deptNo},
        DEPTNAME = #{deptName},
        POSNO = #{posNo},
        POSNAME = #{posName},
        ROLENAME = #{roleName},
        MOBILE = #{mobile},
        PASSPORT = #{passport},
        EMAIL = #{email},
        BANK_NAME = #{bankName},
        ACCOUNT = #{account},
        ACCOUNT_HOLDER = #{accountHolder},
        POSTCODE = #{postCode},
        ADDRESS = #{address},
        ADDRESS_DETAIL = #{addressDetail},
        HIREDATE = #{hireDate},
        HIRETYPE = #{hireType},
        RESIGNDATE = #{resignDate},
        OUTREASONS = #{outReasons},
        ORIGINAL_PROFILE = #{originalProfile},
        RENAME_PROFILE = #{renameProfile},
        REMARKS = #{remarks}
        WHERE EMPNO = #{empNo}
    </update>


    <!--    <update id="setShowAbleHrm">-->
    <!--        &lt;!&ndash; 한번에 여러개 삭제할때 씀 &ndash;&gt;-->
    <!--        UPDATE HRM SET SHOWABLE = 0 WHERE EMPNO IN-->
    <!--        <foreach collection="array" item="item" open="(" close=")" separator=",">-->
    <!--            #{item}-->
    <!--        </foreach>-->
    <!--    </update>-->

    <update id="changeHrmPw" parameterType="HrmDto">
        UPDATE HRM SET PASSWORD = #{password}
        WHERE EMPNO = #{empNo}
    </update>

    <update id="setShowAbleHrm" parameterType="HrmDto">
        UPDATE HRM SET SHOWABLE = 0, RESIGNDATE = #{resignDate}, OUTREASONS = #{outReasons} WHERE EMPNO = #{empNo}
    </update>

    <select id="getSearchEmpNoByName" resultType="HrmDto" parameterType="String">
        SELECT * FROM HRM WHERE ENAME = #{searchName}
    </select>
    <!-- 사용된 연차 일수 조회 쿼리 입니다-->
    <select id="getUsedAnnualLeaveDays" resultType="int" parameterType="int">
        SELECT * FROM HRM WHERE empNo = #{empNo}

    </select>

    <select id="getEvaluation" resultType="EvaluationDto">
        SELECT *,
        TIMESTAMPDIFF(YEAR, e.evaluation_YEAR, CURDATE()) AS yosYear,
        TIMESTAMPDIFF(MONTH, e.evaluation_YEAR, CURDATE()) - TIMESTAMPDIFF(YEAR, e.evaluation_YEAR , CURDATE()) * 12 AS yosMonth,
        (
        (SELECT COUNT(ws.STATUS)
        FROM WORK_SCHEDULE ws
        WHERE ws.EMPNO = hrm.EMPNO AND ws.STATUS = '퇴근' AND ws.WORKDATE > e.evaluation_YEAR) /
        (
        (DATEDIFF(CURDATE(), e.evaluation_YEAR) + 1) -  -- 총 일수에 1을 더해서 오늘날짜도 포함시킴
        (DATEDIFF(CURDATE(), e.evaluation_YEAR) DIV 7 * 2) -  -- 주말 수를 고려해서 두 번 제거
        (CASE WHEN WEEKDAY(e.evaluation_YEAR) = 6 THEN 1 ELSE 0 END) -  -- 입사일이 일요일인 경우 하루를 빼줌
        (CASE WHEN WEEKDAY(CURDATE()) = 5 THEN 1 ELSE 0 END)  -- 오늘이 토요일인 경우 하루를 더해줌
        ) * 100  -- 퍼센트 비율로 계산
        ) AS attendanceRate
        FROM (
        SELECT HRM.*, ROW_NUMBER() OVER () AS num
        FROM HRM
        WHERE HRM.showAble = 1
        ) AS hrm join evaluations e where hrm.empno = e.empno and e.empno = #{value} ORDER BY e.evaluation_YEAR desc LIMIT 1
    </select>

    <select id="getHrmEvaluationList" resultType="HrmDto" parameterType="EvaluationDto">
        SELECT hrm.*, e.evaluation_year, e.performance_grade, e.comments,
        <include refid="evaluation"></include>
        FROM (
        SELECT hrm.*, ROW_NUMBER() OVER () AS num
        FROM HRM
        WHERE HRM.showAble = 1
        ) AS hrm
        JOIN (
        SELECT empno, evaluation_year, performance_grade, comments,
        ROW_NUMBER() OVER (PARTITION BY empno ORDER BY evaluation_year DESC) AS row_num
        FROM evaluations
        WHERE promote = 1
        ) AS e ON hrm.empno = e.empno
        WHERE e.row_num = 1
    </select>

    <insert id="createEvaluation" parameterType="EvaluationDto">
        INSERT INTO EVALUATIONS (
        EMPNO, evaluation_YEAR, performance_grade, promote, comments
        ) VALUES (
        #{empNo}, #{evaluationYear}, #{performanceGrade}, #{promote}, #{comments}
        )
    </insert>
    <update id="updateEvaluation" parameterType="EvaluationDto">
        UPDATE EVALUATIONS SET
        <if test="performanceGrade != null">
        performance_grade = #{performanceGrade},
        </if>
        promote = #{promote}
        WHERE EMPNO = #{empNo}
    </update>



    <select id="getEvalHrmList" resultType="HrmDto" parameterType="HrmPageDto">
    SELECT *,
        <include refid="evaluation"></include>
    FROM (
        SELECT HRM.*, ROW_NUMBER() OVER () AS num
        FROM HRM
        WHERE HRM.showAble = 1
    ) AS hrm
        <if test="start != null and end != null">
    LIMIT #{start}, #{end}
        </if>
    </select>

    <select id="getAllEvalHrmList" resultType="HrmDto">
        SELECT *,
        <include refid="evaluation"></include>
        FROM (
        SELECT HRM.*, ROW_NUMBER() OVER () AS num
        FROM HRM
        WHERE HRM.showAble = 1
        ) AS hrm
    </select>

    <select id="getEvalSearchHrmList" resultType="HrmDto" parameterType="HrmPageDto">
        SELECT *,
        <include refid="evaluation"></include>
        SELECT HRM.*, ROW_NUMBER() OVER () AS num
        FROM HRM
        WHERE HRM.showAble = 1
        <if test="search != null and searchWord != null">
            and hrm.<include refid="search"></include>
        </if>
        ) AS hrm
        LIMIT #{start}, #{end}
    </select>

    <update id="promote" parameterType="HrmDto">
        UPDATE HRM SET posNo = #{posNo}, posName = #{posName}
        WHERE EMPNO = #{empNo}
    </update>
</mapper>